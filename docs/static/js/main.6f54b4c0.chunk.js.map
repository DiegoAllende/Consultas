{"version":3,"sources":["assets/img/logoD.png","auth/LoginScreen.js","hooks/useFormu.js","auth/RegisterScreen.js","routes/AuthRouter.js","pages/DashboardScreen.js","routes/PagesRouter.js","routes/PrivateRouter.js","routes/PublicRouter.js","routes/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["LoginScreen","initialState","validationsForm","useState","formu","setFormu","errors","setErrors","handleChange","event","console","log","target","value","name","handleBlur","useFormu","user","pass","errorsAux","trim","className","src","process","alt","logo","title","autoComplete","noValidate","onSubmit","e","preventDefault","TextField","onChange","onBlur","error","helperText","label","variant","size","fullWidth","Button","type","color","RegisterScreen","AuthRouter","exact","path","component","to","DashboardScreen","PagesRouter","PrivateRouter","isAuthenticated","Component","rest","props","PublicRouter","AppRouter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAe,G,MAAA,IAA0B,mC,+CCM5BA,EAAc,WACzB,IAgBA,ECrBsB,WAAyC,IAAxCC,EAAuC,uDAAxB,GAAIC,EAAoB,uCAC9D,EAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAiBA,MAAO,CAAEH,QAAOE,SAAQE,aAfH,SAACC,GACpBC,QAAQC,IAAI,WAAYF,EAAMG,OAAOC,OACrCR,EAAS,2BAEFD,GAFC,kBAGHK,EAAMG,OAAOE,KAAOL,EAAMG,OAAOC,UAUFE,WALnB,WACjBR,EAAUL,EAAgBE,MDMsBY,CAhB7B,CAACC,KAAM,GAAIC,KAAM,KAEd,SAACd,GACvB,IAAMe,EAAY,GAUlB,OARKf,EAAMa,KAAKG,SACdD,EAAUF,KAAO,oCAGdb,EAAMc,KAAKE,SACdD,EAAUD,KAAO,0CAGZC,KAGFf,EAAP,EAAOA,MAAOE,EAAd,EAAcA,OAAQE,EAAtB,EAAsBA,aAAcO,EAApC,EAAoCA,WAC7BE,EAAcb,EAAda,KAAMC,EAAQd,EAARc,KAOb,OACE,8BACE,yBAASG,UAAU,QAAnB,SACE,wBAAOA,UAAU,gBAAjB,UACE,qBAAKC,IAAG,UAAKC,IAAL,yBAAoDC,IAAI,aAChE,qBAAKF,IAAKG,EAAMC,MAAM,SACtB,qBAAKJ,IAAI,0BAA0BI,MAAM,UACzC,2CACA,uBAAMC,aAAa,MAAMC,YAAU,EAACC,SAbxB,SAACC,GACnBA,EAAEC,iBACFrB,QAAQC,IAAI,UAAWP,IAWjB,UACE,cAAC4B,EAAA,EAAD,CAAWC,SAAUzB,EAAc0B,OAAQnB,EAAYF,MAAOI,EAAMH,KAAK,OAAOqB,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAQW,KAAMmB,WAAU,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAQW,KAAMoB,MAAM,UAAWC,QAAQ,WAAWC,KAAK,QAAQC,WAAS,IACzL,cAACR,EAAA,EAAD,CAAWC,SAAUzB,EAAc0B,OAAQnB,EAAYF,MAAOK,EAAMJ,KAAK,OAAOqB,MAAK,OAAE7B,QAAF,IAAEA,OAAF,EAAEA,EAAQY,KAAMkB,WAAU,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAQY,KAAMmB,MAAM,gBAAcC,QAAQ,WAAWC,KAAK,QAAQC,WAAS,IAC5L,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASJ,QAAQ,YAAYK,MAAM,UAAUH,WAAS,EAAnE,oBACA,cAACC,EAAA,EAAD,CAAQH,QAAQ,WAAWK,MAAM,UAAUH,WAAS,EAApD,gDEzCCI,EAAiB,WAC5B,OACE,4CCCSC,EAAa,WACxB,OACE,8BACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,UAAWhD,IAC3C,cAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,iBAAiBC,UAAWJ,IAC9C,cAAC,IAAD,CAAUK,GAAG,sBCTVC,EAAkB,WAC7B,OACE,6CCASC,EAAc,WACzB,OACE,8BACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,IAAIC,UAAWE,IACjC,cAAC,IAAD,CAAUD,GAAG,Y,0CCNVG,EAAgB,SAAC,GAIvB,IAHLC,EAGI,EAHJA,gBACWC,EAEP,EAFJN,UACGO,EACC,iBACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEP,UAAW,SAACQ,GAAD,OACTH,EAAkB,cAACC,EAAD,eAAeE,IAAW,cAAC,IAAD,CAAUP,GAAG,e,kCCTpDQ,EAAe,SAAC,GAItB,IAHLJ,EAGI,EAHJA,gBACWC,EAEP,EAFJN,UACGO,EACC,iBACJ,OACE,cAAC,IAAD,2BACMA,GADN,IAEEP,UAAW,SAACQ,GAAD,OACRH,EAA4C,cAAC,IAAD,CAAUJ,GAAG,MAAvC,cAACK,EAAD,eAAeE,SCL7BE,EAAY,WAEvB,OACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAcL,gBALL,MAKgCN,KAAK,QAAQC,UAAWH,IACjE,cAAC,EAAD,CAAeQ,gBANN,MAMiCN,KAAK,IAAIC,UAAWG,IAC9D,cAAC,IAAD,CAAUF,GAAG,kBCCRU,MAbf,WACE,OAEE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f54b4c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logoD.5aa0a60a.png\";","import React from 'react';\r\nimport './authStyle.css';\r\nimport logo from '../assets/img/logoD.png';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport { useFormu } from '../hooks/useFormu';\r\n\r\nexport const LoginScreen = () => {\r\n  const InitialFormu = {user: '', pass: ''};\r\n  \r\n  const validationsForm = (formu) => {\r\n    const errorsAux = {};\r\n\r\n    if (!formu.user.trim()) {\r\n      errorsAux.user = 'el campo usuario es obligatorio.';\r\n    }\r\n\r\n    if (!formu.pass.trim()) {\r\n      errorsAux.pass = 'el campo contraseña es obligatorio.';\r\n    }\r\n\r\n    return errorsAux;\r\n  }\r\n\r\n  const {formu, errors, handleChange, handleBlur} = useFormu(InitialFormu, validationsForm);\r\n  const {user, pass} = formu;\r\n\r\n  const handleLogIn = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"formu: \", formu);  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <section className=\"login\">\r\n        <aside className=\"login-content\">\r\n          <img src={`${process.env.PUBLIC_URL}/assets/img/logoD.png`} alt=\"imagen 2\"/>\r\n          <img src={logo} title=\"logo\" />\r\n          <img src='../assets/img/logoD.png' title=\"logo2\" />\r\n          <h2>MI CUENTA</h2>\r\n          <form autoComplete=\"off\" noValidate onSubmit={handleLogIn}>\r\n            <TextField onChange={handleChange} onBlur={handleBlur} value={user} name=\"user\" error={errors?.user} helperText={errors?.user} label=\"Usuario\"  variant=\"outlined\" size=\"small\" fullWidth/>\r\n            <TextField onChange={handleChange} onBlur={handleBlur} value={pass} name=\"pass\" error={errors?.pass} helperText={errors?.pass} label=\"Contraseña\"  variant=\"outlined\" size=\"small\" fullWidth/>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth >Entrar</Button>\r\n            <Button variant=\"outlined\" color=\"primary\" fullWidth>Recuperar Contraseña</Button>\r\n          </form>\r\n        </aside>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const useFormu = (initialState = {}, validationsForm) => {\r\n  const [formu, setFormu] = useState(initialState);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    console.log(\"change: \", event.target.value);\r\n    setFormu(\r\n      {\r\n        ...formu,\r\n        [event.target.name]: event.target.value,\r\n      }\r\n    );\r\n  }\r\n  \r\n  const handleBlur = () => {\r\n    setErrors(validationsForm(formu));\r\n  }\r\n  \r\n\r\n  return { formu, errors, handleChange, handleBlur }\r\n}\r\n","import React from 'react'\r\n\r\nexport const RegisterScreen = () => {\r\n  return (\r\n    <div>\r\n      Register\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const DashboardScreen = () => {\r\n  return (\r\n    <div>\r\n      DASHBOARD\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport { DashboardScreen } from '../pages/DashboardScreen'\r\n\r\nexport const PagesRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n          <Route exact path=\"/\" component={DashboardScreen} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PrivateRouter = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => (\r\n        isAuthenticated ? <Component {...props}/> : <Redirect to=\"/auth\"/> \r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nexport const PublicRouter = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) => (\r\n        !isAuthenticated ? <Component {...props}/> : <Redirect to=\"/\"/> \r\n      )}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { PagesRouter } from './PagesRouter'\r\nimport { PrivateRouter } from './PrivateRouter'\r\nimport { PublicRouter } from './PublicRouter'\r\n\r\nexport const AppRouter = () => {\r\n  const valLogin = false;\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRouter isAuthenticated={valLogin} path=\"/auth\" component={AuthRouter}/>\r\n          <PrivateRouter isAuthenticated={valLogin} path=\"/\" component={PagesRouter}/>\r\n          <Redirect to=\"/auth\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n","import './App.css';\nimport { AppRouter } from './routes/AppRouter';\n\nfunction App() {\n  return (\n\n    <AppRouter />\n    // <div className=\"App\">\n    //   CONSULTAS REACT\n    //   <div>\n    //     <img src={`${process.env.PUBLIC_URL}/assets/img/img151.jpg`} alt=\"imagen 2\"/>\n    //   </div>\n    // </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}